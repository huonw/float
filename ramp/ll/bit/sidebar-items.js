initSidebarItems({"fn":[["and_n","Performs a bitwise \"and\" (`&`) of the n least signficant limbs of `xp` and `yp`, storing the result in `wp`"],["and_not_n","Performs a bitwise and of the n least signficant limbs of `xp` and `yp`, with the limbs of `yp` being first inverted. The result is stored in `wp`."],["nand_n","Performs a bitwise \"nand\" of the n least signficant limbs of `xp` and `yp`, storing the result in `wp`"],["nor_n","Performs a bitwise \"nor\" of the n least signficant limbs of `xp` and `yp`, storing the result in `wp`"],["not","Performs a bitwise inversion (\"not\") of the n least signficant limbs of `xp`, storing the result in `wp`"],["or_n","Performs a bitwise \"or\" (`|`) of the n least signficant limbs of `xp` and `yp`, storing the result in `wp`"],["or_not_n","Performs a bitwise \"or\" of the n least signficant limbs of `xp` and `yp`, with the limbs of `yp` being first inverted. The result is stored in `wp`."],["scan_0","Scans for the first 0 bit starting from the least-significant bit the the most, returning the bit index."],["scan_1","Scans for the first 1 bit starting from the least-significant bit the the most, returning the bit index."],["shl","Performs a bit-shift of the limbs in {xp, xs}, left by `cnt` bits storing the result in {rp, rs}. The top-most shifted bits are returned."],["shr","Performs a bit-shift of the limbs in {xp, xs}, right by `cnt` bits storing the result in {rp, rs}. The bottom-most shifted bits are returned."],["twos_complement","Computes the two's complement of the `xs` least significant words of `xp`. The result is stored the result in `wp`, and a carry is returned, if there is one."],["xor_n","Performs a bitwise \"xor\" (`^`) of the n least signficant limbs of `xp` and `yp`, storing the result in `wp`"]]});